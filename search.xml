<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pytorch入门</title>
      <link href="/read/Pytorch%E5%85%A5%E9%97%A8-0/"/>
      <url>/read/Pytorch%E5%85%A5%E9%97%A8-0/</url>
      
        <content type="html"><![CDATA[<div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h1 id="Pytorch-Tutorial"><a href="#Pytorch-Tutorial" class="headerlink" title="Pytorch Tutorial"></a>Pytorch Tutorial</h1><h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="comment">#print(torch.__version__)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print(torch.cuda.is_available())</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">my_tensor = torch.tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]], dtype=torch.float32,</span><br><span class="line">                         device= device, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_tensor)</span><br></pre></td></tr></table></figure><p>另外一种初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = torch.empty(size= (<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">x = torch.zeros(size= (<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">x = torch.rand(size= (<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">x = torch.eye(size= (<span class="number">3</span>, <span class="number">3</span>)) <span class="comment">#单位矩阵</span></span><br><span class="line">x = torch.arange(start=<span class="number">0</span>, end=<span class="number">5</span>, step=<span class="number">1</span>) <span class="comment">#范围</span></span><br><span class="line">x = torch.linspace(start=<span class="number">0.1</span>, end=<span class="number">1</span>, steps=<span class="number">10</span>) <span class="comment">#0.1 - 1 以内</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>linspace 和 arrange区别就是</p><p>arrange指明了首尾，步长，个数&#x3D;尾-首&#x2F;步长</p><p>linspace指明了首尾，个数，步长&#x3D;尾-首&#x2F;个数</p><p><img src="https://6c1ff8d.webp.li/20241229200247439.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = torch.empty(size= (<span class="number">1</span>, <span class="number">5</span>)).normal_(mean=<span class="number">0</span>, std = <span class="number">1</span>) <span class="comment">#正态分布</span></span><br><span class="line">x = torch.empty(size=(<span class="number">1</span>,<span class="number">5</span>)).uniform_(<span class="number">0</span>,<span class="number">1</span>) <span class="comment">#均匀分布，也就是随机</span></span><br><span class="line">                                          <span class="comment">#但是制定了范围</span></span><br><span class="line">x = torch.diag(torch.ones(<span class="number">3</span>))<span class="comment">#对角线</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Array To Tensor</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np_array = np.zeros((<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">tensor = torch.from_numpy(np_array)</span><br><span class="line">np_array = tensor.numpy()</span><br></pre></td></tr></table></figure><h3 id="向量运算和比较"><a href="#向量运算和比较" class="headerlink" title="向量运算和比较"></a>向量运算和比较</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024年度回顾——指条明路吧！</title>
      <link href="/read/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%E2%80%94%E6%8C%87%E6%9D%A1%E6%98%8E%E8%B7%AF%E5%90%A7/"/>
      <url>/read/2024%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%E2%80%94%E6%8C%87%E6%9D%A1%E6%98%8E%E8%B7%AF%E5%90%A7/</url>
      
        <content type="html"><![CDATA[<div class="video-container"><iframe width="560" height="315" src="https://www.youtube.com/embed/Qss3XdMsHKM?si=YNB1TRGJAQmGGWoo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h2><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p> 文章内容</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
